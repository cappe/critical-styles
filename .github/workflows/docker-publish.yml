name: Docker

on:
  push:
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  build_and_deploy:
    name: Build & Deploy

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    env:
      IMAGE_NAME: critical_styles
    
    defaults:
      run:
        working-directory: app

    steps:
      - uses: actions/checkout@v2

      - name: Build production image
        run: docker build . --file Dockerfile.build --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      #- name: Cleanup untagged images
      #  uses: actions/github-script@v3
      #  with:
      #    github-token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
      #    script: |
      #      const response = await github.request("GET /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions",
      #        { per_page: ${{ env.PER_PAGE }}
      #      });
      #      for(version of response.data) {
      #          if (version.metadata.container.tags.length == 0) {
      #              console.log("delete " + version.id)
      #              const deleteResponse = await github.request("DELETE /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
      #              console.log("status " + deleteResponse.status)
      #          }
      #      }
      #  env:
      #    OWNER: user
      #    PACKAGE_NAME: critical-styles/$IMAGE_NAME
      #    PER_PAGE: 100
